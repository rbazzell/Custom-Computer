|Mino_Machine
LED_Left <= <GND>
LED_Center <= <GND>
LED_Right <= inst3.DB_MAX_OUTPUT_PORT_TYPE
Button_2 => inst5.IN0
Button_1 => inst4.IN0
Clk_50MHZ => Clock_Divider:inst26.clock
Seg_A <= Seven_Seg_Driver:inst18.LED[6]
Seg_B <= Seven_Seg_Driver:inst18.LED[5]
Seg_C <= Seven_Seg_Driver:inst18.LED[4]
Seg_D <= Seven_Seg_Driver:inst18.LED[3]
Seg_E <= Seven_Seg_Driver:inst18.LED[2]
Seg_F <= Seven_Seg_Driver:inst18.LED[1]
Seg_G <= Seven_Seg_Driver:inst18.LED[0]
Digit_1 <= decode2to4:inst19.eq0
Digit_2 <= decode2to4:inst19.eq1
Digit_3 <= decode2to4:inst19.eq2
Digit_4 <= decode2to4:inst19.eq3
Seg_Colon <= mux4to1:inst15.result
CDS_Cell => mux4to1:inst15.data3
Bus_Control <= <VCC>
c[0] <= divider:inst24.quotient[0]
c[1] <= divider:inst24.quotient[1]
c[2] <= divider:inst24.quotient[2]
c[3] <= divider:inst24.quotient[3]
c[4] <= divider:inst24.quotient[4]
c[5] <= divider:inst24.quotient[5]
c[6] <= divider:inst24.quotient[6]
c[7] <= divider:inst24.quotient[7]
a[0] => divider:inst24.denom[0]
a[1] => divider:inst24.denom[1]
a[2] => divider:inst24.denom[2]
a[3] => divider:inst24.denom[3]
a[4] => divider:inst24.denom[4]
a[5] => divider:inst24.denom[5]
a[6] => divider:inst24.denom[6]
a[7] => divider:inst24.denom[7]
b[0] => divider:inst24.numer[0]
b[1] => divider:inst24.numer[1]
b[2] => divider:inst24.numer[2]
b[3] => divider:inst24.numer[3]
b[4] => divider:inst24.numer[4]
b[5] => divider:inst24.numer[5]
b[6] => divider:inst24.numer[6]
b[7] => divider:inst24.numer[7]
Dip[0] => ~NO_FANOUT~
Dip[1] => ~NO_FANOUT~
Dip[2] => ~NO_FANOUT~


|Mino_Machine|Clock_Divider:inst26
clock => lpm_counter:lpm_counter_component.clock
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]
q[2] <= lpm_counter:lpm_counter_component.q[2]
q[3] <= lpm_counter:lpm_counter_component.q[3]
q[4] <= lpm_counter:lpm_counter_component.q[4]
q[5] <= lpm_counter:lpm_counter_component.q[5]
q[6] <= lpm_counter:lpm_counter_component.q[6]
q[7] <= lpm_counter:lpm_counter_component.q[7]
q[8] <= lpm_counter:lpm_counter_component.q[8]
q[9] <= lpm_counter:lpm_counter_component.q[9]
q[10] <= lpm_counter:lpm_counter_component.q[10]
q[11] <= lpm_counter:lpm_counter_component.q[11]
q[12] <= lpm_counter:lpm_counter_component.q[12]
q[13] <= lpm_counter:lpm_counter_component.q[13]
q[14] <= lpm_counter:lpm_counter_component.q[14]
q[15] <= lpm_counter:lpm_counter_component.q[15]
q[16] <= lpm_counter:lpm_counter_component.q[16]
q[17] <= lpm_counter:lpm_counter_component.q[17]
q[18] <= lpm_counter:lpm_counter_component.q[18]
q[19] <= lpm_counter:lpm_counter_component.q[19]
q[20] <= lpm_counter:lpm_counter_component.q[20]
q[21] <= lpm_counter:lpm_counter_component.q[21]
q[22] <= lpm_counter:lpm_counter_component.q[22]
q[23] <= lpm_counter:lpm_counter_component.q[23]
q[24] <= lpm_counter:lpm_counter_component.q[24]
q[25] <= lpm_counter:lpm_counter_component.q[25]
q[26] <= lpm_counter:lpm_counter_component.q[26]
q[27] <= lpm_counter:lpm_counter_component.q[27]
q[28] <= lpm_counter:lpm_counter_component.q[28]
q[29] <= lpm_counter:lpm_counter_component.q[29]


|Mino_Machine|Clock_Divider:inst26|lpm_counter:lpm_counter_component
clock => cntr_09h:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
data[8] => ~NO_FANOUT~
data[9] => ~NO_FANOUT~
data[10] => ~NO_FANOUT~
data[11] => ~NO_FANOUT~
data[12] => ~NO_FANOUT~
data[13] => ~NO_FANOUT~
data[14] => ~NO_FANOUT~
data[15] => ~NO_FANOUT~
data[16] => ~NO_FANOUT~
data[17] => ~NO_FANOUT~
data[18] => ~NO_FANOUT~
data[19] => ~NO_FANOUT~
data[20] => ~NO_FANOUT~
data[21] => ~NO_FANOUT~
data[22] => ~NO_FANOUT~
data[23] => ~NO_FANOUT~
data[24] => ~NO_FANOUT~
data[25] => ~NO_FANOUT~
data[26] => ~NO_FANOUT~
data[27] => ~NO_FANOUT~
data[28] => ~NO_FANOUT~
data[29] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_09h:auto_generated.q[0]
q[1] <= cntr_09h:auto_generated.q[1]
q[2] <= cntr_09h:auto_generated.q[2]
q[3] <= cntr_09h:auto_generated.q[3]
q[4] <= cntr_09h:auto_generated.q[4]
q[5] <= cntr_09h:auto_generated.q[5]
q[6] <= cntr_09h:auto_generated.q[6]
q[7] <= cntr_09h:auto_generated.q[7]
q[8] <= cntr_09h:auto_generated.q[8]
q[9] <= cntr_09h:auto_generated.q[9]
q[10] <= cntr_09h:auto_generated.q[10]
q[11] <= cntr_09h:auto_generated.q[11]
q[12] <= cntr_09h:auto_generated.q[12]
q[13] <= cntr_09h:auto_generated.q[13]
q[14] <= cntr_09h:auto_generated.q[14]
q[15] <= cntr_09h:auto_generated.q[15]
q[16] <= cntr_09h:auto_generated.q[16]
q[17] <= cntr_09h:auto_generated.q[17]
q[18] <= cntr_09h:auto_generated.q[18]
q[19] <= cntr_09h:auto_generated.q[19]
q[20] <= cntr_09h:auto_generated.q[20]
q[21] <= cntr_09h:auto_generated.q[21]
q[22] <= cntr_09h:auto_generated.q[22]
q[23] <= cntr_09h:auto_generated.q[23]
q[24] <= cntr_09h:auto_generated.q[24]
q[25] <= cntr_09h:auto_generated.q[25]
q[26] <= cntr_09h:auto_generated.q[26]
q[27] <= cntr_09h:auto_generated.q[27]
q[28] <= cntr_09h:auto_generated.q[28]
q[29] <= cntr_09h:auto_generated.q[29]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|Mino_Machine|Clock_Divider:inst26|lpm_counter:lpm_counter_component|cntr_09h:auto_generated
clock => counter_cella0.CLK
clock => counter_cella1.CLK
clock => counter_cella2.CLK
clock => counter_cella3.CLK
clock => counter_cella4.CLK
clock => counter_cella5.CLK
clock => counter_cella6.CLK
clock => counter_cella7.CLK
clock => counter_cella8.CLK
clock => counter_cella9.CLK
clock => counter_cella10.CLK
clock => counter_cella11.CLK
clock => counter_cella12.CLK
clock => counter_cella13.CLK
clock => counter_cella14.CLK
clock => counter_cella15.CLK
clock => counter_cella16.CLK
clock => counter_cella17.CLK
clock => counter_cella18.CLK
clock => counter_cella19.CLK
clock => counter_cella20.CLK
clock => counter_cella21.CLK
clock => counter_cella22.CLK
clock => counter_cella23.CLK
clock => counter_cella24.CLK
clock => counter_cella25.CLK
clock => counter_cella26.CLK
clock => counter_cella27.CLK
clock => counter_cella28.CLK
clock => counter_cella29.CLK
q[0] <= counter_cella0.REGOUT
q[1] <= counter_cella1.REGOUT
q[2] <= counter_cella2.REGOUT
q[3] <= counter_cella3.REGOUT
q[4] <= counter_cella4.REGOUT
q[5] <= counter_cella5.REGOUT
q[6] <= counter_cella6.REGOUT
q[7] <= counter_cella7.REGOUT
q[8] <= counter_cella8.REGOUT
q[9] <= counter_cella9.REGOUT
q[10] <= counter_cella10.REGOUT
q[11] <= counter_cella11.REGOUT
q[12] <= counter_cella12.REGOUT
q[13] <= counter_cella13.REGOUT
q[14] <= counter_cella14.REGOUT
q[15] <= counter_cella15.REGOUT
q[16] <= counter_cella16.REGOUT
q[17] <= counter_cella17.REGOUT
q[18] <= counter_cella18.REGOUT
q[19] <= counter_cella19.REGOUT
q[20] <= counter_cella20.REGOUT
q[21] <= counter_cella21.REGOUT
q[22] <= counter_cella22.REGOUT
q[23] <= counter_cella23.REGOUT
q[24] <= counter_cella24.REGOUT
q[25] <= counter_cella25.REGOUT
q[26] <= counter_cella26.REGOUT
q[27] <= counter_cella27.REGOUT
q[28] <= counter_cella28.REGOUT
q[29] <= counter_cella29.REGOUT


|Mino_Machine|Seven_Seg_Driver:inst18
Data_in[0] => Mux6.IN19
Data_in[0] => Mux5.IN19
Data_in[0] => Mux4.IN19
Data_in[0] => Mux3.IN19
Data_in[0] => Mux2.IN19
Data_in[0] => Mux1.IN19
Data_in[0] => Mux0.IN19
Data_in[1] => Mux6.IN18
Data_in[1] => Mux5.IN18
Data_in[1] => Mux4.IN18
Data_in[1] => Mux3.IN18
Data_in[1] => Mux2.IN18
Data_in[1] => Mux1.IN18
Data_in[1] => Mux0.IN18
Data_in[2] => Mux6.IN17
Data_in[2] => Mux5.IN17
Data_in[2] => Mux4.IN17
Data_in[2] => Mux3.IN17
Data_in[2] => Mux2.IN17
Data_in[2] => Mux1.IN17
Data_in[2] => Mux0.IN17
Data_in[3] => Mux6.IN16
Data_in[3] => Mux5.IN16
Data_in[3] => Mux4.IN16
Data_in[3] => Mux3.IN16
Data_in[3] => Mux2.IN16
Data_in[3] => Mux1.IN16
Data_in[3] => Mux0.IN16
LED[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
LED[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
LED[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
LED[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
LED[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
LED[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
LED[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|Mino_Machine|Display_mux:inst16
data0x[0] => LPM_MUX:lpm_mux_component.DATA[0][0]
data0x[1] => LPM_MUX:lpm_mux_component.DATA[0][1]
data0x[2] => LPM_MUX:lpm_mux_component.DATA[0][2]
data0x[3] => LPM_MUX:lpm_mux_component.DATA[0][3]
data1x[0] => LPM_MUX:lpm_mux_component.DATA[1][0]
data1x[1] => LPM_MUX:lpm_mux_component.DATA[1][1]
data1x[2] => LPM_MUX:lpm_mux_component.DATA[1][2]
data1x[3] => LPM_MUX:lpm_mux_component.DATA[1][3]
data2x[0] => LPM_MUX:lpm_mux_component.DATA[2][0]
data2x[1] => LPM_MUX:lpm_mux_component.DATA[2][1]
data2x[2] => LPM_MUX:lpm_mux_component.DATA[2][2]
data2x[3] => LPM_MUX:lpm_mux_component.DATA[2][3]
data3x[0] => LPM_MUX:lpm_mux_component.DATA[3][0]
data3x[1] => LPM_MUX:lpm_mux_component.DATA[3][1]
data3x[2] => LPM_MUX:lpm_mux_component.DATA[3][2]
data3x[3] => LPM_MUX:lpm_mux_component.DATA[3][3]
sel[0] => LPM_MUX:lpm_mux_component.SEL[0]
sel[1] => LPM_MUX:lpm_mux_component.SEL[1]
result[0] <= LPM_MUX:lpm_mux_component.RESULT[0]
result[1] <= LPM_MUX:lpm_mux_component.RESULT[1]
result[2] <= LPM_MUX:lpm_mux_component.RESULT[2]
result[3] <= LPM_MUX:lpm_mux_component.RESULT[3]


|Mino_Machine|Display_mux:inst16|LPM_MUX:lpm_mux_component
data[0][0] => mux_vld:auto_generated.data[0]
data[0][1] => mux_vld:auto_generated.data[1]
data[0][2] => mux_vld:auto_generated.data[2]
data[0][3] => mux_vld:auto_generated.data[3]
data[1][0] => mux_vld:auto_generated.data[4]
data[1][1] => mux_vld:auto_generated.data[5]
data[1][2] => mux_vld:auto_generated.data[6]
data[1][3] => mux_vld:auto_generated.data[7]
data[2][0] => mux_vld:auto_generated.data[8]
data[2][1] => mux_vld:auto_generated.data[9]
data[2][2] => mux_vld:auto_generated.data[10]
data[2][3] => mux_vld:auto_generated.data[11]
data[3][0] => mux_vld:auto_generated.data[12]
data[3][1] => mux_vld:auto_generated.data[13]
data[3][2] => mux_vld:auto_generated.data[14]
data[3][3] => mux_vld:auto_generated.data[15]
sel[0] => mux_vld:auto_generated.sel[0]
sel[1] => mux_vld:auto_generated.sel[1]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_vld:auto_generated.result[0]
result[1] <= mux_vld:auto_generated.result[1]
result[2] <= mux_vld:auto_generated.result[2]
result[3] <= mux_vld:auto_generated.result[3]


|Mino_Machine|Display_mux:inst16|LPM_MUX:lpm_mux_component|mux_vld:auto_generated
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result_node[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result_node[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= result_node[3].DB_MAX_OUTPUT_PORT_TYPE


|Mino_Machine|Display_Count:inst14
clock => lpm_counter:lpm_counter_component.clock
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]


|Mino_Machine|Display_Count:inst14|lpm_counter:lpm_counter_component
clock => cntr_f7h:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_f7h:auto_generated.q[0]
q[1] <= cntr_f7h:auto_generated.q[1]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|Mino_Machine|Display_Count:inst14|lpm_counter:lpm_counter_component|cntr_f7h:auto_generated
clock => counter_cella0.CLK
clock => counter_cella1.CLK
q[0] <= counter_cella0.REGOUT
q[1] <= counter_cella1.REGOUT


|Mino_Machine|decode2to4:inst19
data[0] => lpm_decode:lpm_decode_component.data[0]
data[1] => lpm_decode:lpm_decode_component.data[1]
enable => lpm_decode:lpm_decode_component.enable
eq0 <= lpm_decode:lpm_decode_component.eq[0]
eq1 <= lpm_decode:lpm_decode_component.eq[1]
eq2 <= lpm_decode:lpm_decode_component.eq[2]
eq3 <= lpm_decode:lpm_decode_component.eq[3]


|Mino_Machine|decode2to4:inst19|lpm_decode:lpm_decode_component
data[0] => decode_ndf:auto_generated.data[0]
data[1] => decode_ndf:auto_generated.data[1]
enable => decode_ndf:auto_generated.enable
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
eq[0] <= decode_ndf:auto_generated.eq[0]
eq[1] <= decode_ndf:auto_generated.eq[1]
eq[2] <= decode_ndf:auto_generated.eq[2]
eq[3] <= decode_ndf:auto_generated.eq[3]


|Mino_Machine|decode2to4:inst19|lpm_decode:lpm_decode_component|decode_ndf:auto_generated
data[0] => w_anode14w[1].IN1
data[0] => w_anode30w[1].IN1
data[1] => w_anode22w[2].IN1
data[1] => w_anode30w[2].IN1
enable => w_anode14w[1].IN0
enable => w_anode1w[1].IN0
enable => w_anode22w[1].IN0
enable => w_anode30w[1].IN0
eq[0] <= w_anode1w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode14w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode22w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[3] <= w_anode30w[2].DB_MAX_OUTPUT_PORT_TYPE


|Mino_Machine|mux4to1:inst15
data0 => LPM_MUX:lpm_mux_component.DATA[0][0]
data1 => LPM_MUX:lpm_mux_component.DATA[1][0]
data2 => LPM_MUX:lpm_mux_component.DATA[2][0]
data3 => LPM_MUX:lpm_mux_component.DATA[3][0]
sel[0] => LPM_MUX:lpm_mux_component.SEL[0]
sel[1] => LPM_MUX:lpm_mux_component.SEL[1]
result <= LPM_MUX:lpm_mux_component.RESULT[0]


|Mino_Machine|mux4to1:inst15|LPM_MUX:lpm_mux_component
data[0][0] => mux_sld:auto_generated.data[0]
data[1][0] => mux_sld:auto_generated.data[1]
data[2][0] => mux_sld:auto_generated.data[2]
data[3][0] => mux_sld:auto_generated.data[3]
sel[0] => mux_sld:auto_generated.sel[0]
sel[1] => mux_sld:auto_generated.sel[1]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_sld:auto_generated.result[0]


|Mino_Machine|mux4to1:inst15|LPM_MUX:lpm_mux_component|mux_sld:auto_generated
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE


|Mino_Machine|divider:inst24
denom[0] => lpm_divide:lpm_divide_component.denom[0]
denom[1] => lpm_divide:lpm_divide_component.denom[1]
denom[2] => lpm_divide:lpm_divide_component.denom[2]
denom[3] => lpm_divide:lpm_divide_component.denom[3]
denom[4] => lpm_divide:lpm_divide_component.denom[4]
denom[5] => lpm_divide:lpm_divide_component.denom[5]
denom[6] => lpm_divide:lpm_divide_component.denom[6]
denom[7] => lpm_divide:lpm_divide_component.denom[7]
numer[0] => lpm_divide:lpm_divide_component.numer[0]
numer[1] => lpm_divide:lpm_divide_component.numer[1]
numer[2] => lpm_divide:lpm_divide_component.numer[2]
numer[3] => lpm_divide:lpm_divide_component.numer[3]
numer[4] => lpm_divide:lpm_divide_component.numer[4]
numer[5] => lpm_divide:lpm_divide_component.numer[5]
numer[6] => lpm_divide:lpm_divide_component.numer[6]
numer[7] => lpm_divide:lpm_divide_component.numer[7]
quotient[0] <= lpm_divide:lpm_divide_component.quotient[0]
quotient[1] <= lpm_divide:lpm_divide_component.quotient[1]
quotient[2] <= lpm_divide:lpm_divide_component.quotient[2]
quotient[3] <= lpm_divide:lpm_divide_component.quotient[3]
quotient[4] <= lpm_divide:lpm_divide_component.quotient[4]
quotient[5] <= lpm_divide:lpm_divide_component.quotient[5]
quotient[6] <= lpm_divide:lpm_divide_component.quotient[6]
quotient[7] <= lpm_divide:lpm_divide_component.quotient[7]
remain[0] <= lpm_divide:lpm_divide_component.remain[0]
remain[1] <= lpm_divide:lpm_divide_component.remain[1]
remain[2] <= lpm_divide:lpm_divide_component.remain[2]
remain[3] <= lpm_divide:lpm_divide_component.remain[3]
remain[4] <= lpm_divide:lpm_divide_component.remain[4]
remain[5] <= lpm_divide:lpm_divide_component.remain[5]
remain[6] <= lpm_divide:lpm_divide_component.remain[6]
remain[7] <= lpm_divide:lpm_divide_component.remain[7]


|Mino_Machine|divider:inst24|lpm_divide:lpm_divide_component
numer[0] => lpm_divide_ejq:auto_generated.numer[0]
numer[1] => lpm_divide_ejq:auto_generated.numer[1]
numer[2] => lpm_divide_ejq:auto_generated.numer[2]
numer[3] => lpm_divide_ejq:auto_generated.numer[3]
numer[4] => lpm_divide_ejq:auto_generated.numer[4]
numer[5] => lpm_divide_ejq:auto_generated.numer[5]
numer[6] => lpm_divide_ejq:auto_generated.numer[6]
numer[7] => lpm_divide_ejq:auto_generated.numer[7]
denom[0] => lpm_divide_ejq:auto_generated.denom[0]
denom[1] => lpm_divide_ejq:auto_generated.denom[1]
denom[2] => lpm_divide_ejq:auto_generated.denom[2]
denom[3] => lpm_divide_ejq:auto_generated.denom[3]
denom[4] => lpm_divide_ejq:auto_generated.denom[4]
denom[5] => lpm_divide_ejq:auto_generated.denom[5]
denom[6] => lpm_divide_ejq:auto_generated.denom[6]
denom[7] => lpm_divide_ejq:auto_generated.denom[7]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
quotient[0] <= lpm_divide_ejq:auto_generated.quotient[0]
quotient[1] <= lpm_divide_ejq:auto_generated.quotient[1]
quotient[2] <= lpm_divide_ejq:auto_generated.quotient[2]
quotient[3] <= lpm_divide_ejq:auto_generated.quotient[3]
quotient[4] <= lpm_divide_ejq:auto_generated.quotient[4]
quotient[5] <= lpm_divide_ejq:auto_generated.quotient[5]
quotient[6] <= lpm_divide_ejq:auto_generated.quotient[6]
quotient[7] <= lpm_divide_ejq:auto_generated.quotient[7]
remain[0] <= lpm_divide_ejq:auto_generated.remain[0]
remain[1] <= lpm_divide_ejq:auto_generated.remain[1]
remain[2] <= lpm_divide_ejq:auto_generated.remain[2]
remain[3] <= lpm_divide_ejq:auto_generated.remain[3]
remain[4] <= lpm_divide_ejq:auto_generated.remain[4]
remain[5] <= lpm_divide_ejq:auto_generated.remain[5]
remain[6] <= lpm_divide_ejq:auto_generated.remain[6]
remain[7] <= lpm_divide_ejq:auto_generated.remain[7]


|Mino_Machine|divider:inst24|lpm_divide:lpm_divide_component|lpm_divide_ejq:auto_generated
denom[0] => sign_div_unsign_a6h:divider.denominator[0]
denom[1] => sign_div_unsign_a6h:divider.denominator[1]
denom[2] => sign_div_unsign_a6h:divider.denominator[2]
denom[3] => sign_div_unsign_a6h:divider.denominator[3]
denom[4] => sign_div_unsign_a6h:divider.denominator[4]
denom[5] => sign_div_unsign_a6h:divider.denominator[5]
denom[6] => sign_div_unsign_a6h:divider.denominator[6]
denom[7] => sign_div_unsign_a6h:divider.denominator[7]
numer[0] => sign_div_unsign_a6h:divider.numerator[0]
numer[1] => sign_div_unsign_a6h:divider.numerator[1]
numer[2] => sign_div_unsign_a6h:divider.numerator[2]
numer[3] => sign_div_unsign_a6h:divider.numerator[3]
numer[4] => sign_div_unsign_a6h:divider.numerator[4]
numer[5] => sign_div_unsign_a6h:divider.numerator[5]
numer[6] => sign_div_unsign_a6h:divider.numerator[6]
numer[7] => sign_div_unsign_a6h:divider.numerator[7]
quotient[0] <= sign_div_unsign_a6h:divider.quotient[0]
quotient[1] <= sign_div_unsign_a6h:divider.quotient[1]
quotient[2] <= sign_div_unsign_a6h:divider.quotient[2]
quotient[3] <= sign_div_unsign_a6h:divider.quotient[3]
quotient[4] <= sign_div_unsign_a6h:divider.quotient[4]
quotient[5] <= sign_div_unsign_a6h:divider.quotient[5]
quotient[6] <= sign_div_unsign_a6h:divider.quotient[6]
quotient[7] <= sign_div_unsign_a6h:divider.quotient[7]
remain[0] <= sign_div_unsign_a6h:divider.remainder[0]
remain[1] <= sign_div_unsign_a6h:divider.remainder[1]
remain[2] <= sign_div_unsign_a6h:divider.remainder[2]
remain[3] <= sign_div_unsign_a6h:divider.remainder[3]
remain[4] <= sign_div_unsign_a6h:divider.remainder[4]
remain[5] <= sign_div_unsign_a6h:divider.remainder[5]
remain[6] <= sign_div_unsign_a6h:divider.remainder[6]
remain[7] <= sign_div_unsign_a6h:divider.remainder[7]


|Mino_Machine|divider:inst24|lpm_divide:lpm_divide_component|lpm_divide_ejq:auto_generated|sign_div_unsign_a6h:divider
numerator[0] => neg_num[0].IN0
numerator[1] => neg_num[1].IN0
numerator[2] => neg_num[2].IN0
numerator[3] => neg_num[3].IN0
numerator[4] => neg_num[4].IN0
numerator[5] => neg_num[5].IN0
numerator[6] => neg_num[6].IN0
numerator[7] => neg_num[7].IN0


|Mino_Machine|divider:inst24|lpm_divide:lpm_divide_component|lpm_divide_ejq:auto_generated|sign_div_unsign_a6h:divider|alt_u_div_qie:divider
denominator[0] => add_sub_e7c:add_sub_0.datab[0]
denominator[0] => add_sub_f7c:add_sub_1.datab[0]
denominator[0] => add_sub_g7c:add_sub_2.datab[0]
denominator[0] => add_sub_h7c:add_sub_3.datab[0]
denominator[0] => add_sub_i7c:add_sub_4.datab[0]
denominator[0] => add_sub_j7c:add_sub_5.datab[0]
denominator[0] => add_sub_k7c:add_sub_6.datab[0]
denominator[0] => add_sub_l7c:add_sub_7.datab[0]
denominator[1] => sel[0].IN1
denominator[1] => add_sub_f7c:add_sub_1.datab[1]
denominator[1] => sel[8].IN1
denominator[1] => add_sub_g7c:add_sub_2.datab[1]
denominator[1] => sel[16].IN1
denominator[1] => add_sub_h7c:add_sub_3.datab[1]
denominator[1] => sel[24].IN1
denominator[1] => add_sub_i7c:add_sub_4.datab[1]
denominator[1] => sel[32].IN1
denominator[1] => add_sub_j7c:add_sub_5.datab[1]
denominator[1] => sel[40].IN1
denominator[1] => add_sub_k7c:add_sub_6.datab[1]
denominator[1] => sel[48].IN1
denominator[1] => add_sub_l7c:add_sub_7.datab[1]
denominator[1] => sel[56].IN1
denominator[1] => sel[64].IN1
denominator[2] => sel[1].IN1
denominator[2] => sel[9].IN1
denominator[2] => add_sub_g7c:add_sub_2.datab[2]
denominator[2] => sel[17].IN1
denominator[2] => add_sub_h7c:add_sub_3.datab[2]
denominator[2] => sel[25].IN1
denominator[2] => add_sub_i7c:add_sub_4.datab[2]
denominator[2] => sel[33].IN1
denominator[2] => add_sub_j7c:add_sub_5.datab[2]
denominator[2] => sel[41].IN1
denominator[2] => add_sub_k7c:add_sub_6.datab[2]
denominator[2] => sel[49].IN1
denominator[2] => add_sub_l7c:add_sub_7.datab[2]
denominator[2] => sel[57].IN1
denominator[2] => sel[65].IN1
denominator[3] => sel[2].IN1
denominator[3] => sel[10].IN1
denominator[3] => sel[18].IN1
denominator[3] => add_sub_h7c:add_sub_3.datab[3]
denominator[3] => sel[26].IN1
denominator[3] => add_sub_i7c:add_sub_4.datab[3]
denominator[3] => sel[34].IN1
denominator[3] => add_sub_j7c:add_sub_5.datab[3]
denominator[3] => sel[42].IN1
denominator[3] => add_sub_k7c:add_sub_6.datab[3]
denominator[3] => sel[50].IN1
denominator[3] => add_sub_l7c:add_sub_7.datab[3]
denominator[3] => sel[58].IN1
denominator[3] => sel[66].IN1
denominator[4] => sel[3].IN1
denominator[4] => sel[11].IN1
denominator[4] => sel[19].IN1
denominator[4] => sel[27].IN1
denominator[4] => add_sub_i7c:add_sub_4.datab[4]
denominator[4] => sel[35].IN1
denominator[4] => add_sub_j7c:add_sub_5.datab[4]
denominator[4] => sel[43].IN1
denominator[4] => add_sub_k7c:add_sub_6.datab[4]
denominator[4] => sel[51].IN1
denominator[4] => add_sub_l7c:add_sub_7.datab[4]
denominator[4] => sel[59].IN1
denominator[4] => sel[67].IN1
denominator[5] => sel[4].IN1
denominator[5] => sel[12].IN1
denominator[5] => sel[20].IN1
denominator[5] => sel[28].IN1
denominator[5] => sel[36].IN1
denominator[5] => add_sub_j7c:add_sub_5.datab[5]
denominator[5] => sel[44].IN1
denominator[5] => add_sub_k7c:add_sub_6.datab[5]
denominator[5] => sel[52].IN1
denominator[5] => add_sub_l7c:add_sub_7.datab[5]
denominator[5] => sel[60].IN1
denominator[5] => sel[68].IN1
denominator[6] => sel[5].IN1
denominator[6] => sel[13].IN1
denominator[6] => sel[21].IN1
denominator[6] => sel[29].IN1
denominator[6] => sel[37].IN1
denominator[6] => sel[45].IN1
denominator[6] => add_sub_k7c:add_sub_6.datab[6]
denominator[6] => sel[53].IN1
denominator[6] => add_sub_l7c:add_sub_7.datab[6]
denominator[6] => sel[61].IN1
denominator[6] => sel[69].IN1
denominator[7] => sel[6].IN1
denominator[7] => sel[14].IN1
denominator[7] => sel[22].IN1
denominator[7] => sel[30].IN1
denominator[7] => sel[38].IN1
denominator[7] => sel[46].IN1
denominator[7] => sel[54].IN1
denominator[7] => add_sub_l7c:add_sub_7.datab[7]
denominator[7] => sel[62].IN1
denominator[7] => sel[70].IN1
numerator[0] => add_sub_l7c:add_sub_7.dataa[0]
numerator[1] => add_sub_k7c:add_sub_6.dataa[0]
numerator[2] => add_sub_j7c:add_sub_5.dataa[0]
numerator[3] => add_sub_i7c:add_sub_4.dataa[0]
numerator[4] => add_sub_h7c:add_sub_3.dataa[0]
numerator[5] => add_sub_g7c:add_sub_2.dataa[0]
numerator[6] => add_sub_f7c:add_sub_1.dataa[0]
numerator[7] => add_sub_e7c:add_sub_0.dataa[0]
quotient[0] <= quotient_tmp[0].DB_MAX_OUTPUT_PORT_TYPE
quotient[1] <= quotient_tmp[1].DB_MAX_OUTPUT_PORT_TYPE
quotient[2] <= quotient_tmp[2].DB_MAX_OUTPUT_PORT_TYPE
quotient[3] <= quotient_tmp[3].DB_MAX_OUTPUT_PORT_TYPE
quotient[4] <= quotient_tmp[4].DB_MAX_OUTPUT_PORT_TYPE
quotient[5] <= quotient_tmp[5].DB_MAX_OUTPUT_PORT_TYPE
quotient[6] <= quotient_tmp[6].DB_MAX_OUTPUT_PORT_TYPE
quotient[7] <= quotient_tmp[7].DB_MAX_OUTPUT_PORT_TYPE
remainder[0] <= StageOut[56].DB_MAX_OUTPUT_PORT_TYPE
remainder[1] <= StageOut[57].DB_MAX_OUTPUT_PORT_TYPE
remainder[2] <= StageOut[58].DB_MAX_OUTPUT_PORT_TYPE
remainder[3] <= StageOut[59].DB_MAX_OUTPUT_PORT_TYPE
remainder[4] <= StageOut[60].DB_MAX_OUTPUT_PORT_TYPE
remainder[5] <= StageOut[61].DB_MAX_OUTPUT_PORT_TYPE
remainder[6] <= StageOut[62].DB_MAX_OUTPUT_PORT_TYPE
remainder[7] <= StageOut[63].DB_MAX_OUTPUT_PORT_TYPE


|Mino_Machine|divider:inst24|lpm_divide:lpm_divide_component|lpm_divide_ejq:auto_generated|sign_div_unsign_a6h:divider|alt_u_div_qie:divider|add_sub_e7c:add_sub_0
cout <= carry_eqn[0].DB_MAX_OUTPUT_PORT_TYPE
datab[0] => datab_node[0].IN0
result[0] <= sum_eqn[0].DB_MAX_OUTPUT_PORT_TYPE


|Mino_Machine|divider:inst24|lpm_divide:lpm_divide_component|lpm_divide_ejq:auto_generated|sign_div_unsign_a6h:divider|alt_u_div_qie:divider|add_sub_f7c:add_sub_1
cout <= carry_eqn[1].DB_MAX_OUTPUT_PORT_TYPE
datab[0] => datab_node[0].IN0
datab[1] => datab_node[1].IN0
result[0] <= sum_eqn[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= sum_eqn[1].DB_MAX_OUTPUT_PORT_TYPE


|Mino_Machine|divider:inst24|lpm_divide:lpm_divide_component|lpm_divide_ejq:auto_generated|sign_div_unsign_a6h:divider|alt_u_div_qie:divider|add_sub_g7c:add_sub_2
cout <= add_sub_cella[2].DB_MAX_OUTPUT_PORT_TYPE
datab[0] => datab_node[0].IN0
datab[1] => datab_node[1].IN0
datab[2] => datab_node[2].IN0
result[0] <= add_sub_cella[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= add_sub_cella[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= add_sub_cella[2].DB_MAX_OUTPUT_PORT_TYPE


|Mino_Machine|divider:inst24|lpm_divide:lpm_divide_component|lpm_divide_ejq:auto_generated|sign_div_unsign_a6h:divider|alt_u_div_qie:divider|add_sub_h7c:add_sub_3
cout <= add_sub_cella[3].DB_MAX_OUTPUT_PORT_TYPE
datab[0] => datab_node[0].IN0
datab[1] => datab_node[1].IN0
datab[2] => datab_node[2].IN0
datab[3] => datab_node[3].IN0
result[0] <= add_sub_cella[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= add_sub_cella[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= add_sub_cella[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= add_sub_cella[3].DB_MAX_OUTPUT_PORT_TYPE


|Mino_Machine|divider:inst24|lpm_divide:lpm_divide_component|lpm_divide_ejq:auto_generated|sign_div_unsign_a6h:divider|alt_u_div_qie:divider|add_sub_i7c:add_sub_4
cout <= add_sub_cella[4].DB_MAX_OUTPUT_PORT_TYPE
datab[0] => datab_node[0].IN0
datab[1] => datab_node[1].IN0
datab[2] => datab_node[2].IN0
datab[3] => datab_node[3].IN0
datab[4] => datab_node[4].IN0
result[0] <= add_sub_cella[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= add_sub_cella[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= add_sub_cella[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= add_sub_cella[3].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= add_sub_cella[4].DB_MAX_OUTPUT_PORT_TYPE


|Mino_Machine|divider:inst24|lpm_divide:lpm_divide_component|lpm_divide_ejq:auto_generated|sign_div_unsign_a6h:divider|alt_u_div_qie:divider|add_sub_j7c:add_sub_5
cout <= add_sub_cella[5].DB_MAX_OUTPUT_PORT_TYPE
datab[0] => datab_node[0].IN0
datab[1] => datab_node[1].IN0
datab[2] => datab_node[2].IN0
datab[3] => datab_node[3].IN0
datab[4] => datab_node[4].IN0
datab[5] => datab_node[5].IN0
result[0] <= add_sub_cella[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= add_sub_cella[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= add_sub_cella[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= add_sub_cella[3].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= add_sub_cella[4].DB_MAX_OUTPUT_PORT_TYPE
result[5] <= add_sub_cella[5].DB_MAX_OUTPUT_PORT_TYPE


|Mino_Machine|divider:inst24|lpm_divide:lpm_divide_component|lpm_divide_ejq:auto_generated|sign_div_unsign_a6h:divider|alt_u_div_qie:divider|add_sub_k7c:add_sub_6
cout <= add_sub_cella[6].DB_MAX_OUTPUT_PORT_TYPE
datab[0] => datab_node[0].IN0
datab[1] => datab_node[1].IN0
datab[2] => datab_node[2].IN0
datab[3] => datab_node[3].IN0
datab[4] => datab_node[4].IN0
datab[5] => datab_node[5].IN0
datab[6] => datab_node[6].IN0
result[0] <= add_sub_cella[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= add_sub_cella[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= add_sub_cella[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= add_sub_cella[3].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= add_sub_cella[4].DB_MAX_OUTPUT_PORT_TYPE
result[5] <= add_sub_cella[5].DB_MAX_OUTPUT_PORT_TYPE
result[6] <= add_sub_cella[6].DB_MAX_OUTPUT_PORT_TYPE


|Mino_Machine|divider:inst24|lpm_divide:lpm_divide_component|lpm_divide_ejq:auto_generated|sign_div_unsign_a6h:divider|alt_u_div_qie:divider|add_sub_l7c:add_sub_7
cout <= add_sub_cella[7].DB_MAX_OUTPUT_PORT_TYPE
datab[0] => datab_node[0].IN0
datab[1] => datab_node[1].IN0
datab[2] => datab_node[2].IN0
datab[3] => datab_node[3].IN0
datab[4] => datab_node[4].IN0
datab[5] => datab_node[5].IN0
datab[6] => datab_node[6].IN0
datab[7] => datab_node[7].IN0
result[0] <= add_sub_cella[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= add_sub_cella[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= add_sub_cella[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= add_sub_cella[3].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= add_sub_cella[4].DB_MAX_OUTPUT_PORT_TYPE
result[5] <= add_sub_cella[5].DB_MAX_OUTPUT_PORT_TYPE
result[6] <= add_sub_cella[6].DB_MAX_OUTPUT_PORT_TYPE
result[7] <= add_sub_cella[7].DB_MAX_OUTPUT_PORT_TYPE


|Mino_Machine|divider:inst24|lpm_divide:lpm_divide_component|lpm_divide_ejq:auto_generated|sign_div_unsign_a6h:divider|add_sub_k3c:adder
cin => external_cin_cell.CIN
datab[0] => datab_node[0].IN0
datab[1] => datab_node[1].IN0
datab[2] => datab_node[2].IN0
datab[3] => datab_node[3].IN0
datab[4] => datab_node[4].IN0
datab[5] => datab_node[5].IN0
datab[6] => datab_node[6].IN0
datab[7] => datab_node[7].IN0
result[0] <= add_sub_cella[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= add_sub_cella[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= add_sub_cella[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= add_sub_cella[3].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= add_sub_cella[4].DB_MAX_OUTPUT_PORT_TYPE
result[5] <= add_sub_cella[5].DB_MAX_OUTPUT_PORT_TYPE
result[6] <= add_sub_cella[6].DB_MAX_OUTPUT_PORT_TYPE
result[7] <= add_sub_cella[7].DB_MAX_OUTPUT_PORT_TYPE


|Mino_Machine|divider:inst24|lpm_divide:lpm_divide_component|lpm_divide_ejq:auto_generated|sign_div_unsign_a6h:divider|add_sub_cve:compl_adder1
cin => external_cin_cell.CIN
result[0] <= add_sub_cella[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= add_sub_cella[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= add_sub_cella[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= add_sub_cella[3].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= add_sub_cella[4].DB_MAX_OUTPUT_PORT_TYPE
result[5] <= add_sub_cella[5].DB_MAX_OUTPUT_PORT_TYPE
result[6] <= add_sub_cella[6].DB_MAX_OUTPUT_PORT_TYPE
result[7] <= add_sub_cella[7].DB_MAX_OUTPUT_PORT_TYPE


|Mino_Machine|divider:inst24|lpm_divide:lpm_divide_component|lpm_divide_ejq:auto_generated|sign_div_unsign_a6h:divider|add_sub_cve:compl_adder_4
cin => external_cin_cell.CIN
result[0] <= add_sub_cella[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= add_sub_cella[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= add_sub_cella[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= add_sub_cella[3].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= add_sub_cella[4].DB_MAX_OUTPUT_PORT_TYPE
result[5] <= add_sub_cella[5].DB_MAX_OUTPUT_PORT_TYPE
result[6] <= add_sub_cella[6].DB_MAX_OUTPUT_PORT_TYPE
result[7] <= add_sub_cella[7].DB_MAX_OUTPUT_PORT_TYPE


|Mino_Machine|register16:inst1
clock => lpm_counter:lpm_counter_component.clock
cnt_en => lpm_counter:lpm_counter_component.cnt_en
data[0] => lpm_counter:lpm_counter_component.data[0]
data[1] => lpm_counter:lpm_counter_component.data[1]
data[2] => lpm_counter:lpm_counter_component.data[2]
data[3] => lpm_counter:lpm_counter_component.data[3]
data[4] => lpm_counter:lpm_counter_component.data[4]
data[5] => lpm_counter:lpm_counter_component.data[5]
data[6] => lpm_counter:lpm_counter_component.data[6]
data[7] => lpm_counter:lpm_counter_component.data[7]
data[8] => lpm_counter:lpm_counter_component.data[8]
data[9] => lpm_counter:lpm_counter_component.data[9]
data[10] => lpm_counter:lpm_counter_component.data[10]
data[11] => lpm_counter:lpm_counter_component.data[11]
data[12] => lpm_counter:lpm_counter_component.data[12]
data[13] => lpm_counter:lpm_counter_component.data[13]
data[14] => lpm_counter:lpm_counter_component.data[14]
data[15] => lpm_counter:lpm_counter_component.data[15]
sclr => lpm_counter:lpm_counter_component.sclr
sload => lpm_counter:lpm_counter_component.sload
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]
q[2] <= lpm_counter:lpm_counter_component.q[2]
q[3] <= lpm_counter:lpm_counter_component.q[3]
q[4] <= lpm_counter:lpm_counter_component.q[4]
q[5] <= lpm_counter:lpm_counter_component.q[5]
q[6] <= lpm_counter:lpm_counter_component.q[6]
q[7] <= lpm_counter:lpm_counter_component.q[7]
q[8] <= lpm_counter:lpm_counter_component.q[8]
q[9] <= lpm_counter:lpm_counter_component.q[9]
q[10] <= lpm_counter:lpm_counter_component.q[10]
q[11] <= lpm_counter:lpm_counter_component.q[11]
q[12] <= lpm_counter:lpm_counter_component.q[12]
q[13] <= lpm_counter:lpm_counter_component.q[13]
q[14] <= lpm_counter:lpm_counter_component.q[14]
q[15] <= lpm_counter:lpm_counter_component.q[15]


|Mino_Machine|register16:inst1|lpm_counter:lpm_counter_component
clock => cntr_sbj:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_sbj:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => cntr_sbj:auto_generated.sclr
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => cntr_sbj:auto_generated.sload
data[0] => cntr_sbj:auto_generated.data[0]
data[1] => cntr_sbj:auto_generated.data[1]
data[2] => cntr_sbj:auto_generated.data[2]
data[3] => cntr_sbj:auto_generated.data[3]
data[4] => cntr_sbj:auto_generated.data[4]
data[5] => cntr_sbj:auto_generated.data[5]
data[6] => cntr_sbj:auto_generated.data[6]
data[7] => cntr_sbj:auto_generated.data[7]
data[8] => cntr_sbj:auto_generated.data[8]
data[9] => cntr_sbj:auto_generated.data[9]
data[10] => cntr_sbj:auto_generated.data[10]
data[11] => cntr_sbj:auto_generated.data[11]
data[12] => cntr_sbj:auto_generated.data[12]
data[13] => cntr_sbj:auto_generated.data[13]
data[14] => cntr_sbj:auto_generated.data[14]
data[15] => cntr_sbj:auto_generated.data[15]
cin => ~NO_FANOUT~
q[0] <= cntr_sbj:auto_generated.q[0]
q[1] <= cntr_sbj:auto_generated.q[1]
q[2] <= cntr_sbj:auto_generated.q[2]
q[3] <= cntr_sbj:auto_generated.q[3]
q[4] <= cntr_sbj:auto_generated.q[4]
q[5] <= cntr_sbj:auto_generated.q[5]
q[6] <= cntr_sbj:auto_generated.q[6]
q[7] <= cntr_sbj:auto_generated.q[7]
q[8] <= cntr_sbj:auto_generated.q[8]
q[9] <= cntr_sbj:auto_generated.q[9]
q[10] <= cntr_sbj:auto_generated.q[10]
q[11] <= cntr_sbj:auto_generated.q[11]
q[12] <= cntr_sbj:auto_generated.q[12]
q[13] <= cntr_sbj:auto_generated.q[13]
q[14] <= cntr_sbj:auto_generated.q[14]
q[15] <= cntr_sbj:auto_generated.q[15]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|Mino_Machine|register16:inst1|lpm_counter:lpm_counter_component|cntr_sbj:auto_generated
clock => counter_cella0.CLK
clock => counter_cella1.CLK
clock => counter_cella2.CLK
clock => counter_cella3.CLK
clock => counter_cella4.CLK
clock => counter_cella5.CLK
clock => counter_cella6.CLK
clock => counter_cella7.CLK
clock => counter_cella8.CLK
clock => counter_cella9.CLK
clock => counter_cella10.CLK
clock => counter_cella11.CLK
clock => counter_cella12.CLK
clock => counter_cella13.CLK
clock => counter_cella14.CLK
clock => counter_cella15.CLK
cnt_en => counter_cella0.DATAB
cnt_en => counter_cella1.DATAB
cnt_en => counter_cella2.DATAB
cnt_en => counter_cella3.DATAB
cnt_en => counter_cella4.DATAB
cnt_en => counter_cella5.DATAB
cnt_en => counter_cella6.DATAB
cnt_en => counter_cella7.DATAB
cnt_en => counter_cella8.DATAB
cnt_en => counter_cella9.DATAB
cnt_en => counter_cella10.DATAB
cnt_en => counter_cella11.DATAB
cnt_en => counter_cella12.DATAB
cnt_en => counter_cella13.DATAB
cnt_en => counter_cella14.DATAB
cnt_en => counter_cella15.DATAB
q[0] <= counter_cella0.REGOUT
q[1] <= counter_cella1.REGOUT
q[2] <= counter_cella2.REGOUT
q[3] <= counter_cella3.REGOUT
q[4] <= counter_cella4.REGOUT
q[5] <= counter_cella5.REGOUT
q[6] <= counter_cella6.REGOUT
q[7] <= counter_cella7.REGOUT
q[8] <= counter_cella8.REGOUT
q[9] <= counter_cella9.REGOUT
q[10] <= counter_cella10.REGOUT
q[11] <= counter_cella11.REGOUT
q[12] <= counter_cella12.REGOUT
q[13] <= counter_cella13.REGOUT
q[14] <= counter_cella14.REGOUT
q[15] <= counter_cella15.REGOUT
sclr => counter_cella0.SCLR
sclr => counter_cella1.SCLR
sclr => counter_cella2.SCLR
sclr => counter_cella3.SCLR
sclr => counter_cella4.SCLR
sclr => counter_cella5.SCLR
sclr => counter_cella6.SCLR
sclr => counter_cella7.SCLR
sclr => counter_cella8.SCLR
sclr => counter_cella9.SCLR
sclr => counter_cella10.SCLR
sclr => counter_cella11.SCLR
sclr => counter_cella12.SCLR
sclr => counter_cella13.SCLR
sclr => counter_cella14.SCLR
sclr => counter_cella15.SCLR


|Mino_Machine|alu:inst9
ADD => control[0].OUTPUTSELECT
ADD => control[1].OUTPUTSELECT
ADD => control[2].OUTPUTSELECT
AND_en => control~10.OUTPUTSELECT
AND_en => control~9.OUTPUTSELECT
AND_en => control~8.OUTPUTSELECT
LDA => control~7.OUTPUTSELECT
LDA => control~6.OUTPUTSELECT
LDA => control~5.OUTPUTSELECT
CMA => control~5.DATAA
CMA => control~4.OUTPUTSELECT
CMA => control~3.OUTPUTSELECT
INP => control~2.OUTPUTSELECT
INP => control~1.OUTPUTSELECT
CIR => control~1.DATAA
CIR => control~0.OUTPUTSELECT
CIL => control~0.DATAA
ac[0] => Mux14.IN4
ac[0] => RESULT~0.IN0
ac[0] => Add0.IN16
ac[0] => Mux15.IN1
ac[1] => Mux15.IN3
ac[1] => Mux13.IN4
ac[1] => RESULT~1.IN0
ac[1] => Add0.IN15
ac[1] => Mux14.IN1
ac[2] => Mux14.IN3
ac[2] => Mux12.IN4
ac[2] => RESULT~2.IN0
ac[2] => Add0.IN14
ac[2] => Mux13.IN1
ac[3] => Mux13.IN3
ac[3] => Mux11.IN4
ac[3] => RESULT~3.IN0
ac[3] => Add0.IN13
ac[3] => Mux12.IN1
ac[4] => Mux12.IN3
ac[4] => Mux10.IN4
ac[4] => RESULT~4.IN0
ac[4] => Add0.IN12
ac[4] => Mux11.IN1
ac[5] => Mux11.IN3
ac[5] => Mux9.IN4
ac[5] => RESULT~5.IN0
ac[5] => Add0.IN11
ac[5] => Mux10.IN1
ac[6] => Mux10.IN3
ac[6] => Mux8.IN4
ac[6] => RESULT~6.IN0
ac[6] => Add0.IN10
ac[6] => Mux9.IN1
ac[7] => Mux9.IN3
ac[7] => Mux7.IN4
ac[7] => RESULT~7.IN0
ac[7] => Add0.IN9
ac[7] => Mux8.IN1
ac[8] => Mux8.IN3
ac[8] => Mux6.IN4
ac[8] => RESULT~8.IN0
ac[8] => Add0.IN8
ac[8] => Mux7.IN1
ac[9] => Mux7.IN3
ac[9] => Mux5.IN4
ac[9] => RESULT~9.IN0
ac[9] => Add0.IN7
ac[9] => Mux6.IN1
ac[10] => Mux6.IN3
ac[10] => Mux4.IN4
ac[10] => RESULT~10.IN0
ac[10] => Add0.IN6
ac[10] => Mux5.IN1
ac[11] => Mux5.IN3
ac[11] => Mux3.IN4
ac[11] => RESULT~11.IN0
ac[11] => Add0.IN5
ac[11] => Mux4.IN1
ac[12] => Mux4.IN3
ac[12] => Mux2.IN4
ac[12] => RESULT~12.IN0
ac[12] => Add0.IN4
ac[12] => Mux3.IN1
ac[13] => Mux3.IN3
ac[13] => Mux1.IN4
ac[13] => RESULT~13.IN0
ac[13] => Add0.IN3
ac[13] => Mux2.IN1
ac[14] => Mux2.IN3
ac[14] => Mux0.IN3
ac[14] => RESULT~14.IN0
ac[14] => Add0.IN2
ac[14] => Mux1.IN1
ac[15] => Mux1.IN3
ac[15] => RESULT~15.IN0
ac[15] => Add0.IN1
ac[15] => Mux0.IN1
dr[0] => Mux15.IN4
dr[0] => RESULT~0.IN1
dr[0] => Add0.IN32
dr[1] => Mux14.IN5
dr[1] => RESULT~1.IN1
dr[1] => Add0.IN31
dr[2] => Mux13.IN5
dr[2] => RESULT~2.IN1
dr[2] => Add0.IN30
dr[3] => Mux12.IN5
dr[3] => RESULT~3.IN1
dr[3] => Add0.IN29
dr[4] => Mux11.IN5
dr[4] => RESULT~4.IN1
dr[4] => Add0.IN28
dr[5] => Mux10.IN5
dr[5] => RESULT~5.IN1
dr[5] => Add0.IN27
dr[6] => Mux9.IN5
dr[6] => RESULT~6.IN1
dr[6] => Add0.IN26
dr[7] => Mux8.IN5
dr[7] => RESULT~7.IN1
dr[7] => Add0.IN25
dr[8] => Mux7.IN5
dr[8] => RESULT~8.IN1
dr[8] => Add0.IN24
dr[9] => Mux6.IN5
dr[9] => RESULT~9.IN1
dr[9] => Add0.IN23
dr[10] => Mux5.IN5
dr[10] => RESULT~10.IN1
dr[10] => Add0.IN22
dr[11] => Mux4.IN5
dr[11] => RESULT~11.IN1
dr[11] => Add0.IN21
dr[12] => Mux3.IN5
dr[12] => RESULT~12.IN1
dr[12] => Add0.IN20
dr[13] => Mux2.IN5
dr[13] => RESULT~13.IN1
dr[13] => Add0.IN19
dr[14] => Mux1.IN5
dr[14] => RESULT~14.IN1
dr[14] => Add0.IN18
dr[15] => Mux0.IN4
dr[15] => RESULT~15.IN1
dr[15] => Add0.IN17
inr[0] => Mux15.IN5
inr[1] => Mux14.IN6
inr[2] => Mux13.IN6
inr[3] => Mux12.IN6
inr[4] => Mux11.IN6
inr[5] => Mux10.IN6
inr[6] => Mux9.IN6
inr[7] => Mux8.IN6
inr[8] => Mux7.IN6
inr[9] => Mux6.IN6
inr[10] => Mux5.IN6
inr[11] => Mux4.IN6
inr[12] => Mux3.IN6
inr[13] => Mux2.IN6
inr[14] => Mux1.IN6
inr[15] => Mux0.IN5
e => Mux15.IN6
e => Mux0.IN6
ac_in[0] <= Mux15.DB_MAX_OUTPUT_PORT_TYPE
ac_in[1] <= Mux14.DB_MAX_OUTPUT_PORT_TYPE
ac_in[2] <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
ac_in[3] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
ac_in[4] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
ac_in[5] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
ac_in[6] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
ac_in[7] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
ac_in[8] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
ac_in[9] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
ac_in[10] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
ac_in[11] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
ac_in[12] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
ac_in[13] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
ac_in[14] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
ac_in[15] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout$latch.DB_MAX_OUTPUT_PORT_TYPE


